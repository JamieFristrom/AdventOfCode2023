#include <gtest/gtest.h>

#include "pex.h"

std::unique_ptr<Map> processBeam(std::unique_ptr<Map> highlight, const Map& map, const Vec2& startXY, const Vec2& dir) {
    Vec2 xy = startXY;
    Vec2 delta = dir;
    for (;inBounds(map, xy);) {
        const int8_t mask = 
            (delta == Vec2{ 0, 1 }) ? 1 :
            (delta == Vec2{ 1, 0 }) ? 2 :
            (delta == Vec2{ 0,-1 }) ? 4 :
            (delta == Vec2{-1, 0 }) ? 8 :
            0xff;
        if ((*highlight)[xy.y][xy.x] & mask) {
            return highlight;
        }
        (*highlight)[xy.y][xy.x] |= mask;

        // If the beam encounters empty space (.), it continues in the same direction.
        if (map[xy.y][xy.x] == '.') {
            xy += delta;
        }
        // If the beam encounters a mirror (/ or \), the beam is reflected 90 degrees depending on the angle of the mirror. 
        // For instance, a rightward-moving beam that encounters a / mirror would continue upward in the mirror's column, 
        // while a rightward-moving beam that encounters a \ mirror would continue downward from the mirror's column.
        else if (map[xy.y][xy.x] == '/') {
            delta = Vec2{ -delta.y, -delta.x }; // 0,1 -> -1,0; 1,0 -> 0,-1; 0,-1 -> 1,0; -1,0 -> 0,1
            xy += delta;
        }
        else if (map[xy.y][xy.x] == '\\') {
            delta = Vec2{ delta.y, delta.x }; // 0,1 -> 1,0; 1,0 -> 0,1; 0,-1 -> -1,0; -1,0 -> 0,-1
            xy += delta;
        }
        // If the beam encounters the pointy end of a splitter (| or -), the beam passes through the splitter 
        // as if the splitter were empty space. For instance, a rightward-moving beam that encounters a - 
        // splitter would continue in the same direction.
        // If the beam encounters the flat side of a splitter (| or -), 
        // the beam is split into two beams going in each of the two directions the splitter's pointy ends are pointing. 
        else if (map[xy.y][xy.x] == '-') {
            if (delta.y == 0) {
                xy += delta;
            }
            else {
                auto highlight2 = processBeam(std::move(highlight), map, xy, Vec2(-1, 0));
                return processBeam(std::move(highlight2), map, xy, Vec2(1, 0));
            }
        }
        else if (map[xy.y][xy.x] == '|') {
            if (delta.x == 0) {
                xy += delta;
            }
            else {
                auto highlight2 = processBeam(std::move(highlight), map, xy, Vec2(0, -1));
                return processBeam(std::move(highlight2), map, xy, Vec2(0, 1));
            }
        }
    }
    return highlight;
}

int64_t doTheThing(const std::string& input) {
    auto map = parseMap(input);
    auto highlight = std::make_unique<Map>(createEmptyMap(map[0].size(), map.size()));
    // The beam enters in the top-left corner from the left and heading to the right. 
    // Then, its behavior depends on what it encounters as it moves:

    auto result = processBeam(std::move(highlight), map, { 0,0 }, { 1,0 });
    return mapAccumulate(*result, [](const auto& acc, const auto& cell) { return acc + ((cell!=0)?1:0); });

}


int64_t doTheThing2(const std::string& input) {
    auto map = parseMap(input);
    int64_t maxEnergy;
    for (int row = 0; row < map.size(); row++) {
        auto highlight = std::make_unique<Map>(createEmptyMap(map[0].size(), map.size()));
        auto result = processBeam(std::move(highlight), map, { 0,row }, { 1,0 });
        maxEnergy = std::max(maxEnergy, mapAccumulate(*result, [](const auto& acc, const auto& cell) { return acc + ((cell != 0) ? 1 : 0); }));
        auto highlight2 = std::make_unique<Map>(createEmptyMap(map[0].size(), map.size()));
        auto result2 = processBeam(std::move(highlight2), map, { ssize(map[row])-1,row}, {-1,0});
        maxEnergy = std::max(maxEnergy, mapAccumulate(*result2, [](const auto& acc, const auto& cell) { return acc + ((cell != 0) ? 1 : 0); }));
    }
    for (int col = 0; col < ssize(map[0]); col++) {
        auto highlight = std::make_unique<Map>(createEmptyMap(map[0].size(), map.size()));
        auto result = processBeam(std::move(highlight), map, { col,0 }, { 0,1 });
        maxEnergy = std::max(maxEnergy, mapAccumulate(*result, [](const auto& acc, const auto& cell) { return acc + ((cell != 0) ? 1 : 0); }));
        auto highlight2 = std::make_unique<Map>(createEmptyMap(map[0].size(), map.size()));
        auto result2 = processBeam(std::move(highlight2), map, { col,ssize(map) - 1 }, { 0,-1 });
        maxEnergy = std::max(maxEnergy, mapAccumulate(*result2, [](const auto& acc, const auto& cell) { return acc + ((cell != 0) ? 1 : 0); }));
    }
    return maxEnergy;
}

const std::string& sampleInput = 
R"(.|...\....
|.-.\.....
.....|-...
........|.
..........
.........\
..../.\\..
.-.-/..|..
.|....-|.\
..//.|....
)";

TEST(Aoc16Test, sampleInput_doTheThing_46) {
    ASSERT_EQ(46, doTheThing(sampleInput));
}

TEST(Aoc16Test, sampleInput_doTheThing2_51) {
    ASSERT_EQ(51, doTheThing2(sampleInput));
}

const std::string puzzleInput = 
R"(\....../.-...--.|....\../.......|......|.\......../..................|......|......................|..........
...................|........../.........-..................................../\|....|.........................
................/..../.........\.....-.................................../................./...............|..
..........|.....................\......-..-...|......-|..............|.......\.........|...........--.......|.
.\................................................/............../...|......|............-...................-
.......................|..................-..|...\...|...................................|.......-......../...
...................................../.....|....|...-................-........\....-..........................
.......--.....-.....-.-......\..../....|........\......../..|...................../...........................
.................-......\......../.....-|..............|....-........-....\......|...-.......-....../.........
...........|......-.............\.../.........\...........|.....-...../....................../.........|-.....
...................../........|...-.......-.............../\\...../..\...........................\............
........|.............................................................-....|.........-........-..../.....|....
....././...-.......|...../........../.|..\.....||.............................|............\..................
......\...|.....|..........................-......|.....-........................................./..|.......|
..|../....|..-.-............-..../|.\........................-../...\............................-\..|..-.....
.|..|....\........\.|.-....\....................\...\......../....................../..//...|.....//..-./.....
....................|.............../...|..|.|......./..........................-..............|..|.../.......
........\.................|/.......-...........|/....|.../.|.\...................-...........|.............|..
.........-..|.............\.../....|/.................|/.............\........-..................|...|........
......../........|......\...................|.....\.\.................\......\.........|..................\...
.......\...................|........./...................|.....|......./..../.|.|...-....|........../.........
...............\.|..\......./.....\....../..............\..\...../......\...-.........../\...........-........
......................-.....|......../............../......|.......\..../.............../.../.......|....../..
..............-.\/\.\....................-...\.....................\-../.....\..........\...../......./.......
......./...../....\......../........\..|.................-...................-..........-............../......
.....|..|....|...||.|..../...\......\.|........\...../......................................|..\..............
........-....\........./......|....../.../.......-...................................-|.......................
...................../...../.......................-........\.........\..|./...../.....-..........\...........
...../........\\.\\........................-..-....................\-.|.|-.........................\..........
......................./...........................-.........../.........................../........-/.../....
......-........................./...\........................\....|.../..|../..........-................./....
..-..................-............\........../.......\................................................./......
.../...................|...-.../........................|-.-......./..................-.............\.........
....\...../............../............................-..............-../..........-.....--...................
...-.......-...\...../...............................\................................................|.......
............-.......................\.-\.....\..............\............-.........\..../\...\...-..........\.
\.............|...../\...../....../..........|./...../.......................-..................-.\...........
.-..................-.....-..\..........|..............\..-......-...........//./...-..\.......-../...........
..............|..\..-...\....|.........................-..|...|/.........................-./....../\..|.....-.
...|....\.-...................|.|..................-.....\../..............\............/..........-..........
........../.....|............./............................................|..-......|\.........-........-/.|.
....|../........\..................|...\.........\./....|....-.........-...\....|............................-
-.....................|\............/............\...................-.|........-........../..................
-...|.../....-...../...../............\.................|........................|.......|-...............\-..
..\....................../.\..\.....|.............-.....-....-./......-../..................\.................
../...............|...-..\./.....-....................../................\............-........../.........|..
...|.........\......\.........-..-.|......\...............-......-..............\..........-\......\..........
..|...................\..|.....\.......\...................\............................................/.....
|..|.../.....|..../.......-..................\......../......../.........-....................................
.....\.......................-...\..\.......|........\.............\...|......./-\..........|.....-.\.........
.............................|/|.|.-............./.......|..../.........\\..-.|....|...../.......-..........|.
........|..../.............\.../\...............................................................|.............
..\.-|......|..........................|........./........-..................-......./..........|...-.......\.
/........|....\....../..........||...................|.|...|....................-.|.......\|.\................
............./.......................-..\\.|.../.....|....................\../................................
..................\..................../...........|........\.|........../........./........||.......-/.\.....
........\....-...|..|.......-...-..........................--.......\.../..\.................\................
....-....\......|..../.../......//|...........................|............./.-.|.........\/.|..-............\
-....\..../....................|..\.............\.........-.....\..|.-.\.......-.........|..\.....-...........
........../......\...........././.....-.....|................|.............-|............./...|.......\-......
.................-../............-..............................................-...\.........................
\.....|...................|.../........-..................\.....\/........-...................................
......\......................./................-.........\...-.....-.....|............./...........-..\....\..
......-..//....-........../.............\....\.\.........\...................\..\.............................
|.............-................-......................./.............................\..-.....\............/..
..........|..........................-.|............\......-........\..\.|......|.-........................../
...................|.............-......../..-...............\......../................/..........-\/|..\.....
..../|.|............................./......../.|.\.-.................-............\........|-..-.............
./............../.........-........|.|......|................-.|................/..............\..............
.........-........\..............|/............/....-..../.../.........|.........................\............
.................../.|.\.-....|................................|................./-........-..................
....................\.......\.........//..........-.../..|.....-..-................./...-.....-...............
...........|/.\..-........./...........|.-......-...................................../...................\...
......|....|...........\....-..................-...............-|............-./...............|.......|.....\
..............\...-............/...............|..../....\\../................................/...........-...
../............|..../...................-........-.................|............./..\../....\..-....\..\......
.............\...-..............|............/..........................-...................................|.
.........|...................../....-..........|........./.........|.....-......../..|..............-..../....
.....................\...................../\.................\....../........./..............\.........|.....
..................................\./.-........................|......\.................../...-......\-.......
.......|.......................|............................-.........................../.....................
......\...............-......\...........................|........................./.-........../..../....\...
.../....-|.......-........../..........-......\.............|..-.../.......\.../..../..................-......
........./.............\....-..-...\..--...|.-..-.|...-....-.....\................-/.........|.............-\.
...........|.............\.............\.....|....|.--............|...|.|.............................-/......
../.............|........|................./\..|....../.............|\............\.........\.......|.......|.
-...........-..................-........\...............................-\...................\|......|........
..................../.......-..-...............\..........\..........................................\...../|.
........|........./.......-\.......|............|............../............../......-.....|..................
...........-..........//.....|............\...\................/.........-...-./..|......................-\...
/\........./.|..............|..........|..................-|-.........|........................-..|\.\.-......
............./....../..........|//.....-.....-.../....................|.......\.......-........-...........|..
......................./..........\............./....................\.........-......-\...|..................
.......................-..../../..................-.........-........................\..............|.........
........|..../..../..-|................|.../..........|...........-................\...............-..........
.........|.......\.........................\....|..............\......\....-............................/....-
...........\..........|................................./....................../..............................
........................../.-....................\........................-......|.......|.....-../...........
.............\..-|........-.\|....\............./......\.................|.........\.-......................./
.....--...........\.............\../.....\................................./....-.........|............./.../.
............................|........................\......|/........|...................../.................
.../..|.......................................-.....|.../........................./...-.......................
.|.../../.........-....................-.................../..-......-....|................\..................
......|.....|-....\./.....\.........../.............../...............\...\....\......-.\....-...\-...-./|.../
|.|......./...-....\....\|\...\......\..\.......././.........\........-.....-.........././-....-...-\.........
.......\.|...../.../...../.........\..|./.................\..-\.........\.....|...|.......-...............-/..
............/.-.....................\......./..|................................../|........./.........|..-..|
.../..............././..\.\............|...-.|................/..-..-.........-......-.......//...............
.....\...\-...\.......................-|.........|...-|...........\.........|.....\|...\............-......./.
........|./......|\.................\....|\.................-.../........./..............\-.....-....../....-.
)";

TEST(Aoc16Test, puzzleInput_doTheThing) {
    ASSERT_EQ(0, doTheThing(puzzleInput));
}


TEST(Aoc16Test, puzzleInput_doTheThing2) {
    ASSERT_EQ(0, doTheThing2(puzzleInput));
}